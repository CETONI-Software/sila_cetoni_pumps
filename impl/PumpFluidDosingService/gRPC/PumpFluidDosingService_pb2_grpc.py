# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import PumpFluidDosingService_pb2 as PumpFluidDosingService__pb2
import sila2lib.framework.SiLAFramework_pb2 as SiLAFramework__pb2


class PumpFluidDosingServiceStub(object):
  """Feature: Pump Fluid Dosing Service

  Allows to dose a specified fluid. There are commands for absolute dosing (SetFillLevel) and relative dosing
  (DoseVolume and GenerateFlow) available.

  The flow rate can be negative. In this case the pump aspirates the fluid instead of dispensing. The flow rate
  has to be a value between MaxFlowRate and MinFlowRate. If the value is not within this range (hence is invalid) a
  ValidationError will be thrown.
  At any time the property CurrentSyringeFillLevel can be queried to see how much fluid is left in the syringe.
  Similarly the property CurrentFlowRate can be queried to get the current flow rate at which the pump is dosing.

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetFillLevel = channel.unary_unary(
        '/sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.PumpFluidDosingService/SetFillLevel',
        request_serializer=PumpFluidDosingService__pb2.SetFillLevel_Parameters.SerializeToString,
        response_deserializer=SiLAFramework__pb2.CommandConfirmation.FromString,
        )
    self.SetFillLevel_Info = channel.unary_stream(
        '/sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.PumpFluidDosingService/SetFillLevel_Info',
        request_serializer=SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
        response_deserializer=SiLAFramework__pb2.ExecutionInfo.FromString,
        )
    self.SetFillLevel_Result = channel.unary_unary(
        '/sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.PumpFluidDosingService/SetFillLevel_Result',
        request_serializer=SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
        response_deserializer=PumpFluidDosingService__pb2.SetFillLevel_Responses.FromString,
        )
    self.DoseVolume = channel.unary_unary(
        '/sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.PumpFluidDosingService/DoseVolume',
        request_serializer=PumpFluidDosingService__pb2.DoseVolume_Parameters.SerializeToString,
        response_deserializer=SiLAFramework__pb2.CommandConfirmation.FromString,
        )
    self.DoseVolume_Info = channel.unary_stream(
        '/sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.PumpFluidDosingService/DoseVolume_Info',
        request_serializer=SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
        response_deserializer=SiLAFramework__pb2.ExecutionInfo.FromString,
        )
    self.DoseVolume_Result = channel.unary_unary(
        '/sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.PumpFluidDosingService/DoseVolume_Result',
        request_serializer=SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
        response_deserializer=PumpFluidDosingService__pb2.DoseVolume_Responses.FromString,
        )
    self.GenerateFlow = channel.unary_unary(
        '/sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.PumpFluidDosingService/GenerateFlow',
        request_serializer=PumpFluidDosingService__pb2.GenerateFlow_Parameters.SerializeToString,
        response_deserializer=SiLAFramework__pb2.CommandConfirmation.FromString,
        )
    self.GenerateFlow_Info = channel.unary_stream(
        '/sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.PumpFluidDosingService/GenerateFlow_Info',
        request_serializer=SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
        response_deserializer=SiLAFramework__pb2.ExecutionInfo.FromString,
        )
    self.GenerateFlow_Result = channel.unary_unary(
        '/sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.PumpFluidDosingService/GenerateFlow_Result',
        request_serializer=SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
        response_deserializer=PumpFluidDosingService__pb2.GenerateFlow_Responses.FromString,
        )
    self.StopDosage = channel.unary_unary(
        '/sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.PumpFluidDosingService/StopDosage',
        request_serializer=PumpFluidDosingService__pb2.StopDosage_Parameters.SerializeToString,
        response_deserializer=PumpFluidDosingService__pb2.StopDosage_Responses.FromString,
        )
    self.Subscribe_MaxSyringeFillLevel = channel.unary_stream(
        '/sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.PumpFluidDosingService/Subscribe_MaxSyringeFillLevel',
        request_serializer=PumpFluidDosingService__pb2.Subscribe_MaxSyringeFillLevel_Parameters.SerializeToString,
        response_deserializer=PumpFluidDosingService__pb2.Subscribe_MaxSyringeFillLevel_Responses.FromString,
        )
    self.Subscribe_SyringeFillLevel = channel.unary_stream(
        '/sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.PumpFluidDosingService/Subscribe_SyringeFillLevel',
        request_serializer=PumpFluidDosingService__pb2.Subscribe_SyringeFillLevel_Parameters.SerializeToString,
        response_deserializer=PumpFluidDosingService__pb2.Subscribe_SyringeFillLevel_Responses.FromString,
        )
    self.Subscribe_MaxFlowRate = channel.unary_stream(
        '/sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.PumpFluidDosingService/Subscribe_MaxFlowRate',
        request_serializer=PumpFluidDosingService__pb2.Subscribe_MaxFlowRate_Parameters.SerializeToString,
        response_deserializer=PumpFluidDosingService__pb2.Subscribe_MaxFlowRate_Responses.FromString,
        )
    self.Subscribe_FlowRate = channel.unary_stream(
        '/sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.PumpFluidDosingService/Subscribe_FlowRate',
        request_serializer=PumpFluidDosingService__pb2.Subscribe_FlowRate_Parameters.SerializeToString,
        response_deserializer=PumpFluidDosingService__pb2.Subscribe_FlowRate_Responses.FromString,
        )


class PumpFluidDosingServiceServicer(object):
  """Feature: Pump Fluid Dosing Service

  Allows to dose a specified fluid. There are commands for absolute dosing (SetFillLevel) and relative dosing
  (DoseVolume and GenerateFlow) available.

  The flow rate can be negative. In this case the pump aspirates the fluid instead of dispensing. The flow rate
  has to be a value between MaxFlowRate and MinFlowRate. If the value is not within this range (hence is invalid) a
  ValidationError will be thrown.
  At any time the property CurrentSyringeFillLevel can be queried to see how much fluid is left in the syringe.
  Similarly the property CurrentFlowRate can be queried to get the current flow rate at which the pump is dosing.

  """

  def SetFillLevel(self, request, context):
    """Set Fill Level

    Pumps fluid with the given flow rate until the requested fill level is reached.
    Depending on the requested fill level given in the FillLevel parameter this function may cause
    aspiration or dispension of fluid.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetFillLevel_Info(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetFillLevel_Result(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DoseVolume(self, request, context):
    """Dose Volume
    Dose a certain amount of volume with the given flow rate.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DoseVolume_Info(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DoseVolume_Result(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GenerateFlow(self, request, context):
    """Generate Flow

    Generate a continous flow with the given flow rate. Dosing continues until it gets stopped manually by
    calling StopDosage or until the pusher reached one of its limits.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GenerateFlow_Info(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GenerateFlow_Result(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopDosage(self, request, context):
    """Stop Dosage
    Stops a currently running dosage immediately.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Subscribe_MaxSyringeFillLevel(self, request, context):
    """Maximum Syringe Fill Level
    The maximum amount of fluid that the syringe can hold.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Subscribe_SyringeFillLevel(self, request, context):
    """Syringe Fill Level
    The current amount of fluid left in the syringe.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Subscribe_MaxFlowRate(self, request, context):
    """Maximum Flow Rate
    The maximum value of the flow rate at which this pump can dose a fluid.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Subscribe_FlowRate(self, request, context):
    """Flow Rate
    The current value of the flow rate. It is 0 if the pump does not dose any fluid.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PumpFluidDosingServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetFillLevel': grpc.unary_unary_rpc_method_handler(
          servicer.SetFillLevel,
          request_deserializer=PumpFluidDosingService__pb2.SetFillLevel_Parameters.FromString,
          response_serializer=SiLAFramework__pb2.CommandConfirmation.SerializeToString,
      ),
      'SetFillLevel_Info': grpc.unary_stream_rpc_method_handler(
          servicer.SetFillLevel_Info,
          request_deserializer=SiLAFramework__pb2.CommandExecutionUUID.FromString,
          response_serializer=SiLAFramework__pb2.ExecutionInfo.SerializeToString,
      ),
      'SetFillLevel_Result': grpc.unary_unary_rpc_method_handler(
          servicer.SetFillLevel_Result,
          request_deserializer=SiLAFramework__pb2.CommandExecutionUUID.FromString,
          response_serializer=PumpFluidDosingService__pb2.SetFillLevel_Responses.SerializeToString,
      ),
      'DoseVolume': grpc.unary_unary_rpc_method_handler(
          servicer.DoseVolume,
          request_deserializer=PumpFluidDosingService__pb2.DoseVolume_Parameters.FromString,
          response_serializer=SiLAFramework__pb2.CommandConfirmation.SerializeToString,
      ),
      'DoseVolume_Info': grpc.unary_stream_rpc_method_handler(
          servicer.DoseVolume_Info,
          request_deserializer=SiLAFramework__pb2.CommandExecutionUUID.FromString,
          response_serializer=SiLAFramework__pb2.ExecutionInfo.SerializeToString,
      ),
      'DoseVolume_Result': grpc.unary_unary_rpc_method_handler(
          servicer.DoseVolume_Result,
          request_deserializer=SiLAFramework__pb2.CommandExecutionUUID.FromString,
          response_serializer=PumpFluidDosingService__pb2.DoseVolume_Responses.SerializeToString,
      ),
      'GenerateFlow': grpc.unary_unary_rpc_method_handler(
          servicer.GenerateFlow,
          request_deserializer=PumpFluidDosingService__pb2.GenerateFlow_Parameters.FromString,
          response_serializer=SiLAFramework__pb2.CommandConfirmation.SerializeToString,
      ),
      'GenerateFlow_Info': grpc.unary_stream_rpc_method_handler(
          servicer.GenerateFlow_Info,
          request_deserializer=SiLAFramework__pb2.CommandExecutionUUID.FromString,
          response_serializer=SiLAFramework__pb2.ExecutionInfo.SerializeToString,
      ),
      'GenerateFlow_Result': grpc.unary_unary_rpc_method_handler(
          servicer.GenerateFlow_Result,
          request_deserializer=SiLAFramework__pb2.CommandExecutionUUID.FromString,
          response_serializer=PumpFluidDosingService__pb2.GenerateFlow_Responses.SerializeToString,
      ),
      'StopDosage': grpc.unary_unary_rpc_method_handler(
          servicer.StopDosage,
          request_deserializer=PumpFluidDosingService__pb2.StopDosage_Parameters.FromString,
          response_serializer=PumpFluidDosingService__pb2.StopDosage_Responses.SerializeToString,
      ),
      'Subscribe_MaxSyringeFillLevel': grpc.unary_stream_rpc_method_handler(
          servicer.Subscribe_MaxSyringeFillLevel,
          request_deserializer=PumpFluidDosingService__pb2.Subscribe_MaxSyringeFillLevel_Parameters.FromString,
          response_serializer=PumpFluidDosingService__pb2.Subscribe_MaxSyringeFillLevel_Responses.SerializeToString,
      ),
      'Subscribe_SyringeFillLevel': grpc.unary_stream_rpc_method_handler(
          servicer.Subscribe_SyringeFillLevel,
          request_deserializer=PumpFluidDosingService__pb2.Subscribe_SyringeFillLevel_Parameters.FromString,
          response_serializer=PumpFluidDosingService__pb2.Subscribe_SyringeFillLevel_Responses.SerializeToString,
      ),
      'Subscribe_MaxFlowRate': grpc.unary_stream_rpc_method_handler(
          servicer.Subscribe_MaxFlowRate,
          request_deserializer=PumpFluidDosingService__pb2.Subscribe_MaxFlowRate_Parameters.FromString,
          response_serializer=PumpFluidDosingService__pb2.Subscribe_MaxFlowRate_Responses.SerializeToString,
      ),
      'Subscribe_FlowRate': grpc.unary_stream_rpc_method_handler(
          servicer.Subscribe_FlowRate,
          request_deserializer=PumpFluidDosingService__pb2.Subscribe_FlowRate_Parameters.FromString,
          response_serializer=PumpFluidDosingService__pb2.Subscribe_FlowRate_Responses.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.PumpFluidDosingService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
